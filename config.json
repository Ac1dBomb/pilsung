{
    "DB_HOST": "your_db_host",
    "DB_NAME": "your_db_name",
    "DB_USER": "your_db_user",
    "DB_PASSWORD": "your_db_password",  // Securely manage this!
    "PROJECT_ID": "your-vertex-ai-project-id",
    "LOCATION": "your-vertex-ai-location",
"GENERATION_CONFIG": {
    "max_output_tokens": 4096,  // Max output tokens
    "temperature": 0.9,        // Control randomness (0.0 - deterministic, 1.0 - random)
    "top_k": 40,               // Tokens for top-k filtering
    "top_p": 0.95,              // Cumulative probability for nucleus sampling,
    "presence_penalty": 0.0,   // Penalize new tokens (range: -2.0 to 2.0)
    "frequency_penalty": 0.0, // Penalize frequent tokens (range: -2.0 to 2.0)
    "stop_sequences": []        // Stop sequences (list of strings)
    },
"SAFETY_SETTINGS": [
    {
    "category": "HARM_CATEGORY_HATE_SPEECH",
    "threshold": "BLOCK"       // BLOCK or FILTER
    },
    {
    "category": "HARM_CATEGORY_DANGEROUS_CONTENT",
    "threshold": "BLOCK"        // BLOCK or FILTER
    },
    {
    "category": "HARM_CATEGORY_SEXUALLY_EXPLICIT",
    "threshold": "BLOCK"       // BLOCK or FILTER
    },
    {
    "category": "HARM_CATEGORY_HARASSMENT",
    "threshold": "BLOCK"      // BLOCK or FILTER
    },
    {
    "category": "HARM_CATEGORY_CIVIC_INTEGRITY", // Added for civic integrity issues
    "threshold": "FILTER"      // BLOCK or FILTER
    }
    ],
"LOGGING": {
    "level": "INFO",
    "filename": "app.log",
    "format": "%(asctime)s - %(levelname)s - %(message)s"
    },

"ADMIN": {  // **Securely manage credentials!**
    "username": "admin",  // Example, DO NOT USE IN PRODUCTION
    "password": "admin_password" // Example, DO NOT USE IN PRODUCTION
    },
"SECURITY": {
    "rate_limit": "10/minute",         //  Requests per minute
    "allowed_origins": ["*"],   // Allowed origins for CORS (e.g., ["https://yourdomain.com"]) â€” * allows all, USE WITH CAUTION
    "token_expiry": 3600       // Access token expiry time in seconds (1 hour)
    },

"API_KEYS": {  // **Securely manage API keys!**
    "google_search": "AIzaSyAj9jIkgyvWxEAmXOT4NtwtbvEgexNfyzQ",
    "openai": "YOUR_OPENAI_API_KEY",
    "Gemini_API": "AIzaSyAtC7mI4s9Wk-PwD4ilWLac8H1KnakOX2w"  // Add OpenAI API key
    },
"MODELS": {
    "default": "gemini-1.5-pro-002",
    "advanced": "gemini-1.5-pro",
    "code_generation": "code-bison",
    "chatgpt": "gpt-3.5-turbo",
    "gpt4": "gpt-4",              // Example (adjust as needed for OpenAI model)
    "image_generation": "dall-e-2"        // Example (adjust for your image generation model)
    },
"LANGCHAIN": {
    "memory_type": "ConversationBufferMemory",  // Or other memory types
    "memory_size": 5,                        // Adjust as needed
    "llm_default": "default",                 // Key from the MODELS section, set to which model to use with Langchain
    "embeddings_model": "textembedding-gecko@001"   // Vertex AI embeddings model name (if used)
    },

"RENDER": {
    "service_name": "your-render-service-name",
    "instance_type": "free",          // Adjust as needed
    "region": "your-render-region"    //  (e.g., "frankfurt")
    }
}